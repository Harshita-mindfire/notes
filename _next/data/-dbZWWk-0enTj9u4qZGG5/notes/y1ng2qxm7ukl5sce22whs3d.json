{"pageProps":{"note":{"id":"y1ng2qxm7ukl5sce22whs3d","title":"Performance","desc":"","updated":1658248722733,"created":1657371770600,"custom":{},"fname":"notes.topic.javascript.performance","type":"note","vault":{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},"contentHash":"4f548a65ab7b4f07d1201f00ff4fa79b","links":[],"anchors":{"memoization":{"type":"header","text":"Memoization","value":"memoization","line":8,"column":0,"depth":2},"rate-limiting":{"type":"header","text":"Rate Limiting","value":"rate-limiting","line":13,"column":0,"depth":1},"debouncing":{"type":"header","text":"Debouncing","value":"debouncing","line":15,"column":0,"depth":2},"create-debounce-fun-from-scratch":{"type":"header","text":"Create debounce fun from scratch","value":"create-debounce-fun-from-scratch","line":21,"column":0,"depth":3},"throttling":{"type":"header","text":"Throttling","value":"throttling","line":40,"column":0,"depth":2}},"children":[],"parent":"8k7fj3knfjs2vz42yxldbzk","data":{}},"body":"<h1 id=\"performance\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#performance\"></a>Performance</h1>\n<h2 id=\"memoization\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#memoization\"></a>Memoization</h2>\n<ul>\n<li>Memoization is a way to cache a return value of a function based on its parameters.</li>\n<li>This makes the func that takes a long time to run, much faster after one execution. </li>\n<li>If the parameter changes, it will still have to reevaluate the function. </li>\n</ul>\n<h1 id=\"rate-limiting\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rate-limiting\"></a>Rate Limiting</h1>\n<h2 id=\"debouncing\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#debouncing\"></a>Debouncing</h2>\n<ul>\n<li>limiting the rate of execution of a particular function</li>\n<li>used in search bars etc.</li>\n<li>I have normally used lodash Debouncing</li>\n</ul>\n<h3 id=\"create-debounce-fun-from-scratch\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#create-debounce-fun-from-scratch\"></a>Create debounce fun from scratch</h3>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">debounce</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fn<span class=\"token punctuation\">,</span> wait</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> timer<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token spread operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maintains the context, so that the fn is called within the same lexical environment with same arguments as it was running before wrapping it around a debounce function.</span>\n        <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span> <span class=\"token comment\">// clear timer in subsequent keystrokes.</span>\n         timer <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n            fn<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wait<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> optiminzedFn <span class=\"token operator\">=</span> <span class=\"token function\">debounce</span><span class=\"token punctuation\">(</span>handleChange<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"throttling\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#throttling\"></a>Throttling</h2>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Root","desc":"","updated":1655025026733,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},"contentHash":"bc178ae9d620304b10fedbadacbc746f","links":[],"anchors":{"learning":{"type":"header","text":"Learning","value":"learning","line":7,"column":0,"depth":1}},"children":["fkhev0yr0bbwd3x499erqqp","trkx8xrg7g2fm023ez4ldqj","5mg2j4msjvokz541h0tdvni","c8csxid3zoghxorepwcrami","twdastnk7qsdzm0wt64i6cz","c31i1fsmoluyjb7iffcjabg","v6w7qcvk7gmeht0j9xzdtbd","cev4vzt27wi2rjm3znxgwkl","984qz0r52n001q7yxhrh1sm"],"parent":null,"data":{},"body":"# Learning\n\nThis vault contains my study notes\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableExportPodV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/localhost/journal","selfContained":true,"name":"journal"},{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},{"fsPath":"dependencies/localhost/mindfire-solutions","selfContained":true,"name":"mindfire-solutions"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["learning-notes","mindfire-solutions","journal"]},"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}