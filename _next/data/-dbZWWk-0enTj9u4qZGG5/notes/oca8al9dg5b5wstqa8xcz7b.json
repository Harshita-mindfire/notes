{"pageProps":{"note":{"id":"oca8al9dg5b5wstqa8xcz7b","title":"Performance","desc":"","updated":1649614685015,"created":1648993685432,"custom":{},"fname":"notes.topic.react.performance","type":"note","vault":{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},"contentHash":"d1bbc33a62790b518e47cf7c77f932ba","links":[],"anchors":{"performance":{"type":"header","text":"Performance","value":"performance","line":8,"column":0,"depth":1},"memoisation":{"type":"header","text":"Memoisation","value":"memoisation","line":11,"column":0,"depth":2},"reactmemo":{"type":"header","text":"React.memo","value":"reactmemo","line":14,"column":0,"depth":3},"functional-component":{"type":"header","text":"Functional Component","value":"functional-component","line":17,"column":0,"depth":4},"class-component":{"type":"header","text":"Class Component","value":"class-component","line":22,"column":0,"depth":4},"usecallback-hook":{"type":"header","text":"useCallback hook","value":"usecallback-hook","line":25,"column":0,"depth":3},"usememo-hook":{"type":"header","text":"useMemo hook","value":"usememo-hook","line":35,"column":0,"depth":3},"code-splitting":{"type":"header","text":"Code splitting","value":"code-splitting","line":39,"column":0,"depth":2},"suspense":{"type":"header","text":"Suspense","value":"suspense","line":47,"column":0,"depth":2}},"children":[],"parent":"8fp89ktw3fhi2p6bt35b5ju","data":{}},"body":"<h1 id=\"performance\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#performance\"></a>Performance</h1>\n<h1 id=\"performance-1\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#performance-1\"></a>Performance</h1>\n<p>For every state update, React component re-renders. When the parent component re-renders, all its children are re-rendered. This causes a performance issue. To minimize re-rendering of Components which are unaffected by the state change, we use advance concepts like memoization.</p>\n<h2 id=\"memoisation\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#memoisation\"></a>Memoisation</h2>\n<ul>\n<li>If the props of Child Component does not change, it will not rerender along with the Parent.</li>\n</ul>\n<h3 id=\"reactmemo\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reactmemo\"></a>React.memo</h3>\n<p>Memoizes a component.</p>\n<h4 id=\"functional-component\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#functional-component\"></a>Functional Component</h4>\n<p>Wrap component in React.memo() while exporting for functional component.</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword module\">export</span> <span class=\"token keyword module\">default</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">memo</span><span class=\"token punctuation\">(</span><span class=\"token maybe-class-name\">Card</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Card is name of component</span>\n</code></pre>\n<h4 id=\"class-component\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#class-component\"></a>Class Component</h4>\n<p>Extend React.PureComponent instead of React.Component</p>\n<h3 id=\"usecallback-hook\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usecallback-hook\"></a>useCallback hook</h3>\n<p>It returns a memoized version of the callback that only changes if one of the dependencies has changed. This is necessary when App sends callback as a Prop to child.</p>\n<ul>\n<li>Rule of Thumb: always wrap <em>the function in useCallback</em> which is passed as a prop if the <strong>component is memoized</strong>.</li>\n</ul>\n<pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> handleChange <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setSearchKey</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token property-access\">target</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<h3 id=\"usememo-hook\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#usememo-hook\"></a>useMemo hook</h3>\n<p>useMemo will only recompute the memoized value when one of the dependencies has changed. This optimization helps to avoid expensive calculations on every render.</p>\n<h2 id=\"code-splitting\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#code-splitting\"></a>Code splitting</h2>\n<pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword module\">import</span> <span class=\"token imports\"><span class=\"token maybe-class-name\">OtherComponent</span></span> <span class=\"token keyword module\">from</span> <span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token literal-property property\">After</span><span class=\"token operator\">:</span>\n<span class=\"token keyword\">const</span> <span class=\"token maybe-class-name\">OtherComponent</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">React</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token keyword module\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./OtherComponent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h2 id=\"suspense\"><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#suspense\"></a>Suspense</h2>\n<pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Loading...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span>\n\n</code></pre>","noteIndex":{"id":"dlb5bmx7v8f6otsgongz4vx","title":"Root","desc":"","updated":1655025026733,"created":1648190029829,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},"contentHash":"bc178ae9d620304b10fedbadacbc746f","links":[],"anchors":{"learning":{"type":"header","text":"Learning","value":"learning","line":7,"column":0,"depth":1}},"children":["fkhev0yr0bbwd3x499erqqp","trkx8xrg7g2fm023ez4ldqj","5mg2j4msjvokz541h0tdvni","c8csxid3zoghxorepwcrami","twdastnk7qsdzm0wt64i6cz","c31i1fsmoluyjb7iffcjabg","v6w7qcvk7gmeht0j9xzdtbd","cev4vzt27wi2rjm3znxgwkl","984qz0r52n001q7yxhrh1sm"],"parent":null,"data":{},"body":"# Learning\n\nThis vault contains my study notes\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true,"enableExportPodV2":true,"enableSelfContainedVaults":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"vaults":[{"fsPath":"dependencies/localhost/journal","selfContained":true,"name":"journal"},{"fsPath":"dependencies/localhost/learning-notes","selfContained":true,"name":"learning-notes","sync":"sync"},{"fsPath":"dependencies/localhost/mindfire-solutions","selfContained":true,"name":"mindfire-solutions"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"task","dateFormat":"y.MM.dd","addBehavior":"asOwnDomain","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"taskCompleteStatus":["done","x"],"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"enableFullHierarchyNoteTitle":false,"enableSmartRefs":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"Personal Knowledge Space"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"duplicateNoteBehavior":{"action":"useVault","payload":["learning-notes","mindfire-solutions","journal"]},"siteUrl":"localhost:3000","siteFaviconPath":"favicon.ico","siteIndex":"root","searchMode":"lookup"}}},"__N_SSG":true}